!function(e,t){e.__gr=e.__gr||{};class n{constructor(e){this.config={apiKey:e.apiKey||null,theme:e.theme||"light",displayMode:e.displayMode||"carousel",target:e.target||null,maxReviews:e.maxReviews||5,minRating:e.minRating||0,...e},this.initialized=!1}async init(){if(!this.initialized)try{if(console.log("Initializing Google Reviews Widget"),this.config.target){if(console.log("Looking for target element:",this.config.target),this.container=t.querySelector(this.config.target),!this.container)return void console.error(`GoogleReviews: Target element "${this.config.target}" not found`)}else{const e=t.querySelectorAll(".gr-widget");if(console.log("Found",e.length,"elements with gr-widget class"),e.length>0)this.container=e[0],this.config.apiKey||(this.config.apiKey=this.container.getAttribute("data-gr-api-key")),this.config.placeId=this.container.getAttribute("data-gr-place-id")||this.config.placeId,this.config.theme=this.container.getAttribute("data-gr-theme")||this.config.theme,this.config.displayMode=this.container.getAttribute("data-gr-display-mode")||this.config.displayMode,this.config.maxReviews=parseInt(this.container.getAttribute("data-gr-max-reviews")||this.config.maxReviews,10),this.config.minRating=parseInt(this.container.getAttribute("data-gr-min-rating")||this.config.minRating,10),console.log("Found gr-widget with config:",{apiKey:this.config.apiKey,placeId:this.config.placeId,theme:this.config.theme,displayMode:this.config.displayMode,maxReviews:this.config.maxReviews,minRating:this.config.minRating});else{const e=t.querySelectorAll("[data-googlereviews]");if(console.log("Found",e.length,"elements with data-googlereviews attribute"),0===e.length)return void console.error("GoogleReviews: No container elements found");this.container=e[0],this.config.apiKey||(this.config.apiKey=this.container.getAttribute("data-googlereviews")),this.config.theme=this.container.getAttribute("data-theme")||this.config.theme,this.config.displayMode=this.container.getAttribute("data-display")||this.config.displayMode,this.config.maxReviews=parseInt(this.container.getAttribute("data-max-reviews")||this.config.maxReviews,10),this.config.minRating=parseInt(this.container.getAttribute("data-min-rating")||this.config.minRating,10)}}this.showLoading();const e=await this.fetchWidgetData();this.render(e),this.initialized=!0,this.setupEventListeners()}catch(e){this.showError(e)}}async fetchWidgetData(){if(!this.config.apiKey)throw new Error("GoogleReviews: API key is required");const e=this.getBaseUrl();let n=`apiKey=${this.config.apiKey}`;this.config.placeId&&(n+=`&placeId=${this.config.placeId}`);const i=`${e}/api/reviews/widget?${n}`;console.log("Fetching widget data from:",i);try{const e=t.getElementById("widget-debug-status");e&&(e.textContent=`Widget status: Fetching from ${i}`);const n=await fetch(i);if(console.log("API response status:",n.status),!n.ok){const t=await n.text();throw console.error(`API error (${n.status}):`,t),e&&(e.textContent=`Error ${n.status}: ${t.substring(0,100)}`),new Error(`GoogleReviews: Failed to load widget data (${n.status}): ${t}`)}const o=await n.json();return console.log("Widget data received:",o),e&&(e.textContent="Widget status: Data received successfully"),o}catch(e){console.error("Error fetching widget data:",e);const n=t.getElementById("widget-debug-status");throw n&&(n.textContent=`Error: ${e.message}`),e}}showLoading(){this.container.innerHTML='\n          <div class="gr-loading">\n            <div class="gr-spinner"></div>\n            <p>Loading reviews...</p>\n          </div>\n        ',this.addStyles()}showError(e){console.error("GoogleReviews widget error:",e),this.container.innerHTML='\n          <div class="gr-error">\n            <p>Sorry, we couldn\'t load the reviews at this time.</p>\n          </div>\n        ',this.addStyles()}addStyles(){if(t.getElementById("gr-styles"))return;const e=t.createElement("style");e.id="gr-styles",e.textContent="\n          .gr-loading {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            padding: 20px;\n            text-align: center;\n          }\n          \n          .gr-spinner {\n            border: 3px solid #f3f3f3;\n            border-top: 3px solid #3498db;\n            border-radius: 50%;\n            width: 30px;\n            height: 30px;\n            animation: gr-spin 1s linear infinite;\n            margin-bottom: 10px;\n          }\n          \n          @keyframes gr-spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n          \n          .gr-error {\n            padding: 15px;\n            color: #721c24;\n            background-color: #f8d7da;\n            border: 1px solid #f5c6cb;\n            border-radius: 4px;\n          }\n          \n          /* Base widget styles */\n          .gr-widget {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n            line-height: 1.5;\n            color: #333;\n            background-color: #fff;\n            max-width: 100%;\n          }\n          \n          .gr-widget.theme-dark {\n            color: #f5f5f5;\n            background-color: #222;\n          }\n          \n          /* Review item styling */\n          .gr-review-item {\n            background-color: #f9f9f9;\n            color: #333;\n            padding: 12px;\n            margin: 8px 0;\n            border-radius: 8px;\n            box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n          }\n          \n          .gr-widget.theme-dark .gr-review-item {\n            background-color: #333;\n            color: #f5f5f5;\n            box-shadow: 0 1px 3px rgba(0,0,0,0.5);\n          }\n          \n          /* Additional widget styles based on display mode */\n          .gr-carousel {\n            display: flex;\n            overflow-x: auto;\n            scroll-snap-type: x mandatory;\n            scroll-behavior: smooth;\n            -webkit-overflow-scrolling: touch;\n          }\n          \n          .gr-carousel .gr-review {\n            scroll-snap-align: start;\n            flex-shrink: 0;\n            width: 300px;\n            margin-right: 16px;\n            border-radius: 8px;\n            overflow: hidden;\n          }\n          \n          .gr-list .gr-review {\n            margin-bottom: 16px;\n            padding: 16px;\n            border-radius: 8px;\n          }\n          \n          .gr-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n            gap: 16px;\n          }\n        ",t.head.appendChild(e)}render(e){const{reviews:n,placeData:i}=e,o=n.filter((e=>e.rating>=this.config.minRating)).slice(0,this.config.maxReviews);this.container.innerHTML="",this.container.className=`gr-widget mode-${this.config.displayMode} theme-${this.config.theme}`;const s=t.createElement("div");s.className="gr-header",s.innerHTML=`\n          <div class="gr-business-info">\n            <h3>${i.name}</h3>\n            <div class="gr-rating">\n              <div class="gr-stars" style="--rating: ${i.rating};"></div>\n              <span>${i.rating.toFixed(1)} stars from ${i.user_ratings_total} reviews</span>\n            </div>\n          </div>\n        `,this.container.appendChild(s);const r=t.createElement("div");r.className=`gr-${this.config.displayMode}`,o.forEach((e=>{const n=t.createElement("div");n.className="gr-review",n.innerHTML=`\n            <div class="gr-review-header">\n              <img \n                src="${e.profile_photo_url||"https://your-api.example.com/default-profile.png"}" \n                alt="${e.author_name}" \n                class="gr-author-image"\n              />\n              <div class="gr-reviewer-info">\n                <h4>${e.author_name}</h4>\n                <div class="gr-stars" style="--rating: ${e.rating};"></div>\n                <span class="gr-time">${this.formatDate(e.time)}</span>\n              </div>\n            </div>\n            <div class="gr-review-content">\n              <p>${e.text}</p>\n            </div>\n          `,r.appendChild(n)})),this.container.appendChild(r);const a=t.createElement("div");a.className="gr-footer",a.innerHTML=`\n          <a href="${i.url}" target="_blank" rel="noopener noreferrer">\n            See all reviews on Google\n          </a>\n          <div class="gr-powered-by">\n            Powered by <a href="https://your-site.example.com" target="_blank">GoogleReviews</a>\n          </div>\n        `,this.container.appendChild(a)}formatDate(e){return new Date(1e3*e).toLocaleDateString(void 0,{year:"numeric",month:"short",day:"numeric"})}getBaseUrl(){const n=t.getElementsByTagName("script");console.log("Looking for widget script among",n.length,"scripts");for(let e=0;e<n.length;e++){const t=n[e].src;if(t&&(t.includes("widget.js")||t.includes("widget.min.js"))){const e=new URL(t);return console.log("Found widget script at:",t),console.log("Using base URL:",`${e.protocol}//${e.host}`),`${e.protocol}//${e.host}`}}return e.location.pathname.includes("/widget/demo.html")||e.location.pathname.includes("/src/widget/demo.html")?(console.log("Detected demo environment, using localhost:5173"),"http://localhost:5173"):(console.log("Falling back to page origin:",e.location.origin),e.location.origin)}setupEventListeners(){if("carousel"===this.config.displayMode){const e=this.container.querySelector(".gr-carousel");if(!e)return;const n=t.createElement("button");n.className="gr-nav gr-prev",n.innerHTML="&lsaquo;",n.addEventListener("click",(()=>{e.scrollBy({left:-330,behavior:"smooth"})}));const i=t.createElement("button");i.className="gr-nav gr-next",i.innerHTML="&rsaquo;",i.addEventListener("click",(()=>{e.scrollBy({left:330,behavior:"smooth"})})),this.container.appendChild(n),this.container.appendChild(i)}}call(e,...t){switch(e){case"refresh":this.init();break;case"setTheme":this.config.theme=t[0],this.container.className=`gr-widget mode-${this.config.displayMode} theme-${this.config.theme}`;break;case"setDisplayMode":this.config.displayMode=t[0],this.init();break;default:console.error(`GoogleReviews: Unknown method "${e}"`)}}}e.GoogleReviews=e.GoogleReviews||{init:function(){const t=new n(e.__gr);e.GoogleReviews.instance=t,t.init()},call:function(t,...n){e.GoogleReviews.instance?e.GoogleReviews.instance.call(t,...n):console.error("GoogleReviews: Widget not initialized. Call GoogleReviews.init() first.")}},e.__gr.asyncInit||e.GoogleReviews.init()}(window,document);